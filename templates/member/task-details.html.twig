{% extends 'base.html.twig' %}
{% block layout %}
	<div class="layout-wrapper layout-content-navbar layout-without-menu">
		<div
			class="layout-container">
			<!-- Layout container -->
			<div class="layout-page">
				<!-- Navbar -->
                {{ include('components/navbar.html.twig') }}
				<!-- / Navbar -->

				<!-- Content wrapper -->
					<div
					class="content-wrapper"> <!-- Content -->
					<div class="container-xxl flex-grow-1 container-p-y">
                        <a href="{{ path('member_project', {id: task.project.id}) }}" class="btn btn-secondary">Back</a>
						<h4 class="fw-bold py-3 mb-4">
							<span class="text-muted fw-light">Project Task Details /
							</span>
							{{ project.title }}
						</h4>
                        <div class="row gy-4">
                            <div class="col-md-12 col-lg-6">
                                <div class="card shadow h-100">
                                    <h5 class="card-header pb-2">About Task</h5>
                                    <div class="card-body">
                                        <label class="form-label fw-bold">Asigned member</label><br/>
                                        <div class="content mb-2 d-flex gap-2 align-items-center">
                                            <img src="{{ asset(task.user.imagePath != null ? task.user.imagePath : 'assets/img/avatars/no-avatar.png') }}" class="avatar" alt=""/>
                                            <h6 class="fw-bold m-0 p-0 text-dark">
                                                {{task.user.firstName ~ ' ' ~ task.user.lastName}}
                                            </h6>
                                        </div>
                                        <label class="form-label fw-bold mb-1">Status</label><br/>
                                        <div class="content">
                                            <h6 class="badge
                                            {% if task.status == 'Not Started Yet' %}
                                                bg-label-dark
                                            {% elseif task.status == 'Pending' %}
                                                bg-label-info
                                            {% elseif task.status == 'In Progress' %}
                                                bg-label-primary
                                            {% elseif task.status == 'Finished' %}
                                                bg-label-success
                                            {% endif %}
                                            me-1 mb-0">{{task.status}}</h6>
                                            {% if task.user.id == app.user.id %}
                                                {% if task.status == 'Not Started Yet' %}
                                                    <button class="btn btn-dark d-block btn-sm my-2 start-task">start task</button>
                                                {% else %}
                                                    <button class="btn btn-dark d-block btn-sm my-2" data-bs-toggle="modal" data-bs-target="#update_task_status">update progress</button>
                                                {% endif %}
                                            {% endif %}
                                        </div>
                                        <label class="form-label fw-bold">Task description</label>
                                        <p class="m-0">
                                           {{ task.description }}
                                        </p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12 col-lg-6">
                                <div class="card shadow comments-container" style="max-height: 400px">
                                    <div class="card-header border-bottom">
                                        <h5 class="m-0">Task comments</h5>
                                    </div>
                                    <div class="card-body py-2 content">
                                        <div class="row g-2 " id="task_comments">
                                            {% if task.comments is not empty %}
                                                {% for comment in task.comments %}
                                                    <div class="col-12 d-flex gap-2 shadow-sm p-2 rounded-2">
                                                        <img src="{{ asset(comment.user.imagePath != null ? comment.user.imagePath : 'assets/img/avatars/no-avatar.png') }}" class="avatar rounded-circle"/>
                                                        <div class="d-flex flex-column">
                                                            <p class="p-0 m-0 fw-bold">{{ comment.user.firstName ~ ' ' ~ comment.user.lastName }}</p>
                                                            <div style="font-size: 0.8rem; line-height: 1.1" class="lead">
                                                                <p class="mb-1">
                                                                   {{ comment.content }}
                                                                </p>
                                                                <p class="m-0" style="font-size: .6rem;">{{ comment.createdAt|date('Y-m-d H:m:s') }}</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                {% endfor %}
                                            {% else %}
                                                <h6 class="text-center lead pt-3">No comments yet</h6>
                                            {% endif %}
                                        </div>
                                    </div>
                                    <form id="new_comment_form" class="card-footer border-top py-3">
                                        <div class="row gx-0">
                                            <div class="col-10">
                                                <input type="text" id="commentContent" style=" border-top-right-radius: 0; border-bottom-right-radius: 0;" name="content" placeholder="Write your comment here" class="form-control"/>
                                            </div>
                                            <div class="col-2">
                                                <button class="btn btn-primary" style=" border-top-left-radius: 0; border-bottom-left-radius: 0;">
                                                    send
                                                </button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="card shadow h-100">
                                    <div class="card-header pb-2">
                                        <h5 class="m-0">Task References</h5>
                                    </div>
                                    <div class="card-body pt-2 pb-0 content pb-4">
                                        <div class="row g-3">
                                            <div class="col-12">
                                                <label class="form-label py-0 mb-2 h4 fw-bold">@Task files</label>
                                                <div class="file-list">
                                                    {% if task.files is not empty %}
                                                        {% for file in task.files %}
                                                            <a href="{{ path('get_file', {id: file.id}) }}" class="file-item"  title="{{ file.name }}">
                                                                <div class="file-icon">
                                                                    <i class="bx bxs-file"></i>
                                                                </div>
                                                                <div class="file-details">
                                                                    <h5 class="file-name">{{ file.name|length > 11 ? file.name|slice(0, 12) : file.name }}{{ file.name|length > 11 ? '..' : '' }}</h5>
                                                                    <p class="file-size">Size: {{ file.size >= 100000 ? file.size/1024 : file.size }}Ko</p>
                                                                </div>
                                                            </a>
                                                        {% endfor %}
                                                    {% else %}
                                                        <h6 class="lead">no file imported yet</h6>
                                                    {% endif %}
                                                </div>
                                            </div>
                                            <div class="col-12 d-flex gap-2 align-items-center pt-0 {{task.user.id != app.user.id ? 'd-none' : ''}}">
                                                <button class="btn btn-success " id="addFileButton">
                                                    <i class="bx bx-file"></i>
                                                    new file
                                                </button>
                                                <button class="btn btn-primary d-none new_file_btn" id="new_file_btn">
                                                    save
                                                </button>
                                                <input type="file" name="file" id="file" hidden/>
                                                <span class="px-2" id="file_name"></span>
                                            </div>
                                            <div class="col-12">
                                                <label class="form-label py-0 fw-bold">@Task dependencies</label><br>
                                                <span class="text-danger">This task depends on :</span>
                                                <div class="dependency-list my-2">
                                                    {% if task.dependencies is not empty %}
                                                        {% for dependency in task.dependencies %}
                                                            <div class="dependency-item">
                                                                <div class="dependency-icon">
                                                                    <i class="bx bx-task"></i>
                                                                </div>
                                                                <div class="dependency-details">
                                                                    <h5 class="dependency-name">{{dependency.dependentTask.title}}</h5>
                                                                    <p class="dependency-description">
                                                                        {{dependency.dependentTask.description|slice(0, 40)}} {{dependency.dependentTask.description|length > 40 ? '...' : ''}}
                                                                    </p>
                                                                </div>
                                                            </div>
                                                        {% endfor %}
                                                    {% else %}
                                                        <h6 class="lead">No dependecies</h6>
                                                    {% endif %}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
					</div>
					<!-- / Content -->
                    <!--new dependency modal-->
                        <form id="new_dependency_form">
                            <div class="modal fade" id="new_dependency_modal" tabindex="-1" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">Add new dependency</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body py-1 pt-2">
                                            <div class="row">
                                                <div class="col">
                                                    <select name="dependent_task_id" id="dependent_task_id" class="form-select">
                                                        <option value="">select a task</option>
                                                        {% for c_task in project.tasks|filter(t => t.id != task.id) %}
                                                            <option value="{{ c_task.id }}">{{ c_task.title }}</option>
                                                        {% endfor %}
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer pb-2">
                                            <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                                                Close
                                            </button>
                                            <button type="submit" class="btn btn-primary">
                                                Submit
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <div class="col-lg-8 col-md-6">
                        <small class="text-light fw-semibold">Update project status</small>
                        <div class="modal fade" id="update_task_status" tabindex="-1" aria-hidden="true">
                            <div class="modal-dialog modal-md modal-dialog-centered" role="document">
                                <div class="modal-content">
                                    <div class="modal-body">
                                        <div class="row g-2 text-center">
                                            <div class="col-6 col-sm-4">
                                                <button class="btn btn-sm btn-warning w-100 update_project_status"  data-status="Pending">
                                                    PENDING
                                                </button>
                                            </div>
                                            <div class="col-6 col-sm-4">
                                                <button class="btn btn-sm btn-primary w-100 update_project_status"  data-status="In Progress">
                                                    IN PROGRESS
                                                </button>
                                            </div>
                                            <div class="col-6 col-sm-4">
                                                <button class="btn btn-sm btn-success w-100 update_project_status" data-status="Finished">
                                                    FINISHED
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--/new dependency modal-->
					<div class="content-backdrop fade"></div>
				</div>
				<!-- Content wrapper -->
			</div>
			<!-- / Layout page -->
		</div>
	</div>
{% endblock %}
{% block javascript %}
    <script>
      $(document).ready(function () {
            $('#new_comment_form').submit(function(event){
                event.preventDefault();
                let content = $('#commentContent');
                let isValid = true;
                if(content.val() === ''){
                    isValid = false;
                    content.toggleClass('error');
                }else{
                    content.removeClass('error');
                }
                if(isValid){
                    Swal.fire({
                    icon: 'warning',
                    title: 'Confirmation',
                    text: 'Are you sure you want to add this comment?',
                    showCancelButton: true,
                    confirmButtonColor: '#1E90FF',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Add',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if(result.isConfirmed){
                        let url = "{{ path('new_task_comment', {id: task.id}) }}";
                        $.ajax({
                            url: url,
                            method: 'POST',
                            data: $(this).serialize()
                        }).then((response) => {
                            if (!jQuery.isEmptyObject(response)) {
                                    $('#commentContent').val('');
                                    const commentHtml = `<div class="col-12 d-flex gap-2 shadow-sm p-2 rounded-2">
                                                            <img src="{{ asset('`+ response.imagePath +`') }}" class="avatar rounded-circle"/>
                                                            <div class="d-flex flex-column">
                                                                <p class="p-0 m-0 fw-bold">`+ response.fullName +`</p>
                                                                <div style="font-size: 0.8rem; line-height: 1.1" class="lead">
                                                                    <p class="mb-1">
                                                                        `+ response.content +`
                                                                    </p>
                                                                    <p class="m-0" style="font-size: .6rem;">
                                                                        `+ response.createdAt +`
                                                                    </p>
                                                                </div>
                                                            </div>
                                                        </div>`;
                                    $('#task_comments h6').remove();
                                    $('#task_comments').append(commentHtml);
                                    Swal.fire({
                                        position: 'center',
                                        icon: 'success',
                                        title: 'Comment has been Added',
                                        confirmButtonText: 'OK',
                                    })
                                }
                            });
                        }
                    })
                }
            })
            $("#addFileButton").click(function () {
                $("#file").click();
            });
            // Handle file selection
            $("#file").change(function () {
                var fileName = $(this).val().split("\\").pop();
                $("#file_name").text(fileName);
                $("#new_file_btn").removeClass("d-none");
            });

            $('.new_file_btn').on('click', function(){
                Swal.fire({
                    icon: 'warning',
                    title: 'Confirmation',
                    text: 'Are you sure you want to add this comment?',
                    showCancelButton: true,
                    confirmButtonColor: '#1E90FF',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Add',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if(result.isConfirmed){
                        let url = "{{ path('new_task_file', {id: task.id}) }}";
                        let formData = new FormData();
                        formData.append('file', $("#file")[0].files[0])
                        $.ajax({
                            url: url,
                            method: 'POST',
                            data: formData,
                            processData: false,
                            contentType: false,
                        }).then((response) => {
                            if(response == 'added'){
                                Swal.fire({
                                    position: 'center',
                                    icon: 'success',
                                    title: 'Comment has been Added',
                                    confirmButtonText: 'OK',
                                    timer:2500
                                }).then(function(){
                                    window.location.reload();
                                })
                            }
                        })
                    }
                })

            })

            $('.start-task').on('click', function(){
                Swal.fire({
                    icon: 'warning',
                    title: 'Confirmation',
                    text: 'Are you sure you want to start this task?',
                    showCancelButton: true,
                    confirmButtonColor: '#1E90FF',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Start',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if(result.isConfirmed){
                        let url = "{{ path('start_task', {id: task.project.id, task_id: task.id}) }}"
                        $.ajax({
                            url: url,
                            method: 'POST',
                        }).then((response) => {
                            if(response == 'started'){
                                Swal.fire({
                                    position: 'center',
                                    icon: 'success',
                                    title: 'Task has been Started',
                                    confirmButtonText: 'OK',
                                    timer:2500
                                }).then(function(){
                                    window.location.reload();
                                })
                            }else{
                                Swal.fire({
                                    position: 'center',
                                    icon: 'error',
                                    title: 'Cannot start Task, Dependency founded!',
                                    confirmButtonText: 'OK',
                                    timer:2500
                                })
                            }
                        })
                    }
                })
            })

            $('.update_project_status').click(function(event){
                Swal.fire({
                    icon: 'warning',
                    title: 'Confirmation',
                    text: 'Are you sure you want to update this task status?',
                    showCancelButton: true,
                    confirmButtonColor: '#1E90FF',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Update',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if(result.isConfirmed){
                        let url = "{{ path('update_task', {id: task.project.id, task_id: task.id}) }}"
                        let formData = new FormData();
                        formData.append('status', $(this).data('status'))
                        $.ajax({
                            url: url,
                            method: 'POST',
                            data: formData,
                            processData: false,
                            contentType: false
                        }).then((response) => {
                            if(response == 'updated'){
                                Swal.fire({
                                    position: 'center',
                                    icon: 'success',
                                    title: 'Task status has been updated',
                                    confirmButtonText: 'OK',
                                    timer:2500
                                }).then(function(){
                                    window.location.reload();
                                })
                            }
                        })
                    }
                })
            })
      });
    </script>
{% endblock %}
