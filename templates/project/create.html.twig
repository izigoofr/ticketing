{% extends 'base.html.twig' %}

{% block content %}
	<h4 class="fw-bold py-3 mb-4">
		<span class="text-muted">Projects Management /</span>
		Create a project
	</h4>
	<form action="" method="post" id="new_project_form">
		<div class="card">
			<h5 class="card-header">Fill these informations</h5>
			<div class="card-body pt-4">
				<div class="row g-3 mb-3">
					<div class="col-12">
						<label for="title" class="form-label">Name title</label>
						<input type="text" class="form-control" placeholder="Enter name" name="title" id="title">
					</div>
                    <div class="col-12">
                        <label for="attachment" class="form-label">Attachment</label>
                        <input type="file" class="form-control" name="attachment" id="attachment">
                    </div>

                </div>
                <div class="row g-3 mb-3">
					<div class="col-12">
                     <label for="contact_info" class="form-label">Detail action</label>
                    <textarea placeholder="Detail" style="resize: none;" name="content" id="content" cols="30"rows="5" class="form-control"></textarea>
                        </div>

				</div>
				<div class="row g-3 mb-3">
					<div class="col-12 col-md-4">
						<label for="title" class="form-label">Service</label>
						<select class="form-select" name="client_id" id="client_id">
							<option value="">Select the service</option>
							{% for client in clients %}
                                <option value="{{ client.id }}">{{ client.lastName ~ ' ' ~ client.firstName }}</option>
                            {% endfor %}
						</select>
					</div>
					<div class="col-12 col-md-4">
						<label for="title" class="form-label">DeadLine</label>
						<input type="date" class="form-control" name="deadline" id="deadline">
					</div>

                    <div class="col-12 col-md-4">
						<label for="title" class="form-label">Priority</label>
						<select class="form-select" name="priority" id="priority">
							<option value="">Select the priority</option>
                            <option value="1">Low</option>
                            <option value="2">Medium</option>
                            <option value="3">High</option>
						</select>
					</div>
				</div>

				<div class="row g-3 mb-3">
					<div class="col-12 col-md-4">
						<label for="title" class="form-label">Tags</label>
						<input type="text" class="form-control" placeholder="Project tags" name="tags" id="tags">
					</div>
                    <div class="col-12 col-md-4">
						<label for="title" class="form-label">Type</label>
						<select class="form-select" name="type" id="type">
							<option value="">Select the type</option>
                            <option value="1">Project</option>
                            <option value="2">Tiketing</option>
							<option value="3">Network</option>
                            <option value="4">Other</option>
						</select>
					</div>
					<div class="col-12 col-md-4">
						<label for="title" class="form-label">Sandbox</label>
						<select class="form-select" name="sandboxes" id="sandboxes">
							<option value="">Select the sandbox</option>
							{% for sandbox in sandboxes %}
								<option value="{{ sandbox.id }}">{{ sandbox.title }}</option>
							{% endfor %}
						</select>
					</div>

				</div>

				<div class="row g-3 mb-3">
                 <div class="col-12 col-md-4">
						<label for="title" class="form-label">Applicant</label>
						<select class="form-select" name="applicant" id="applicant">
							<option value="">Select the applicant</option>
							<option value="virginie">Virginie</option>
                            <option value="melanie">Melanie</option>
                            <option value="autre">Autre</option>
						</select>
					</div>
					<div class="col-12 col-md-4">
						<label for="title" class="form-label">Manager</label>
						<select class="form-select" name="manager_id" id="manager_id">
							<option value="">Select the manager</option>
							{% for manager in managers|filter(m => m.roles[0] == 'ROLE_MANAGER') %}
                                <option value="{{ manager.id }}">manager {{manager.firstName ~ ' ' ~ manager.lastName}}</option>
                            {% endfor %}
						</select>
					</div>

					<div class="col-12 col-md-4">
						<label for="title" class="form-label">Team</label>
						<select class="form-select" name="team_id" id="team_id">
							<option value="">Asign the project to a team</option>
							{% for team in teams %}
                                <option value="{{ team.id }}">Team {{ team.name }}</option>
                            {% endfor %}
						</select>
					</div>
				</div>
				<div class="row mt-4">
					<div class="col d-flex gap-2 justify-content-end">
						<button type="reset" id="reset" class="btn btn-secondary">Reset</button>
						<button type="submit" class="btn btn-primary">Save</button>
					</div>
				</div>
			</div>
		</div>
	</form>
    <!--tagify path-->
    <script src="{{ asset('assets/js/tagify.min.js') }}"></script>
    <!-- tags input handler -->
    {% block javascript %}
        <script>
            //set active page
            $('#projects').toggleClass('active');
        </script>
        <script>
            let tags = document.querySelector('input[name=tags]');
            new Tagify(tags);
        </script>
        <!-- form validatoin -->
        <script>
            $(document).ready(function(){
                $("#new_project_form").submit(function (event) {
                    event.preventDefault();
                    let fields = [
                        $("#title"),
                        $("#startdate"),
                        $("#client_id"),
                        $("#deadline"),
                        $("#priority"),
                        $("#applicant"),
                        $("#manager_id"),
                        $("#team_id")
                    ];

                    let isValid = true;

                    fields.forEach(field => {
                        if (field.val() === "") {
                            field.addClass("error");
                            isValid = false;
                        } else {
                            field.removeClass("error");
                        }
                    });

                    if(isValid){
                        let url = "{{ path('store_project') }}";
                        $.ajax({
                            url: url,
                            method: 'POST',
                            data: $(this).serialize()
                        }).then((response) => {
                            if(response == 'created'){
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Added',
                                    text: 'The project has been created.',
                                    confirmButtonColor: '#3085d6',
                                    confirmButtonText: 'OK'
                                }).then(function(){
                                    window.location.href = '/projects';
                                });
                            }
                        }).fail(function(){
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'An error occurred.',
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'OK'
                            });
                        })
                    }

                })
                $("#reset").click(function () {
                    let fields = [
                        $("#title"),
                        $("#client_id"),
                        $("#deadline"),
                        $("#priority"),
                        $("#tags"),
                        $("#applicant"),
                        $("#manager_id"),
                        $("#team_id")
                    ];
                    fields.forEach(fields => {
                        fields.removeClass("error");
                    })
                })
            })
        </script>
    {% endblock %}
{% endblock %}
